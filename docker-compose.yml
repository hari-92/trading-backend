version: '3.5'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://root:secret@mongo:27017/dev?authSource=admin
      - MYSQL_HOST=mysql
      - MYSQL_USER=hari
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=trading
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "npm install && npm run start:dev"

  redis:
    image: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --notify-keyspace-events Ex
    ports:
      - "6379:6379"

  mongo:
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: dbz
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 30s
      retries: 5

  mysql:
    image: mysql:8.0
    command: "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootsecret
      MYSQL_DATABASE: trading
      MYSQL_USER: hari
      MYSQL_PASSWORD: secret
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mongo_data:
  mysql_data:
